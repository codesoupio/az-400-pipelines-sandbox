name: ci
on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, synchronize]
# Env variables Can be added in global, job or step level
env:
  MOCK_ENV: 'value'
jobs:
  build:
    environment: dev
    runs-on: ubuntu-latest
    outputs:
      test-output: ${{steps.test-output.outputs.key}}
    steps:
      - name: Checkout pull request branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set NodeJS version
        uses: actions/setup-node@v4
        with:
          node-version: '20.11.0'
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests
        run: npm run test:cov
      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: 'coverage/lcov-report/index.html'
      - name: Lint source code
        run: npm run lint
      - name: Build source code
        run: npm run build
      - name: print github output variable
        run: echo "$GITHUB_OUTPUT"
      - name: testing job output feature
        id: test-output
        run: echo "key=value" >> "$GITHUB_OUTPUT"
      - name: Test custom configuration variable depending on environment
        run: echo "${{ vars.MOCK_CONFIGURATION_VAR }}"
      - name: test secrets
        run: echo "${{ secrets.MOCK_SECRET }}"
#      - name: Upload artifacts
#        uses: actions/upload-artifact@v4
#        with:
#          name: dist-file
#          path: 'dist/main.js'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-file
      - name: test_build_job_output
        run: echo "${{ needs.build.outputs.test-output }}"
      - name: Deploy
        run: echo "Deploying..."
